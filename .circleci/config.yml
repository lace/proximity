version: 2
jobs:
  main:
    docker:
      - image: circleci/python:3

    steps:
      - checkout

      - run:
          name: Install container dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -qq -y libspatialindex-dev

      - run:
          name: Install python dependencies
          command: |
            mkdir -p venv
            virtualenv venv
            . venv/bin/activate
            set -o pipefail; pip install --upgrade -r requirements_dev.txt | cat

      - run:
          name: Show versions
          command: |
            . venv/bin/activate
            pip freeze

      - run:
          name: Run tests
          when: always
          command: |
            . venv/bin/activate
            ./dev.py coverage

      - run:
          name: Run the doc build
          when: always
          command: |
            . venv/bin/activate
            ./dev.py doc

  lint:
    docker:
      - image: circleci/python:3

    steps:
      - checkout

      - run:
          name: Install container dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -qq -y libspatialindex-dev

      - run:
          name: Install python dependencies
          command: |
            mkdir -p venv
            virtualenv venv
            . venv/bin/activate
            set -o pipefail; pip install --upgrade -r requirements_dev.txt | cat

      - run:
          name: Show versions
          command: |
            . venv/bin/activate
            pip freeze

      - run:
          name: Check lint
          command: |
            . venv/bin/activate
            ./dev.py lint

  format:
    docker:
      - image: circleci/python:3

    steps:
      - checkout

      - run:
          name: Install container dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -qq -y libspatialindex-dev

      - run:
          name: Install python dependencies
          command: |
            mkdir -p venv
            virtualenv venv
            . venv/bin/activate
            set -o pipefail; pip install --upgrade -r requirements_dev.txt | cat

      - run:
          name: Show versions
          command: |
            . venv/bin/activate
            pip freeze

      - run:
          name: Check code format
          command: |
            . venv/bin/activate
            ./dev.py black-check

workflows:
  version: 2

  on-commit:
    jobs:
      - main
      - lint
      - format

  daily:
    triggers:
      - schedule:
          cron: "0 17 * * *"
          filters:
            branches:
              only: master
    jobs:
      - main
      - lint
      - format
